library(sf)
library(plotly)
library(tidyverse)
library(ggplot2)
#Reading file
swedfile<-read.csv("Swedish_Household.csv",fileEncoding = "ISO-8859-1")
swedimage<-readRDS("Sweden_counties.rds")
#Renaming the levels of Age to more readable form and modifying the columns in table
levels(swedfile$age)<-c("Young","Adult","Senior")
colnames(swedfile)<-c("Region","Age","Mean_Income")
#Renaming the county to simpler form.
columnsplit<-strsplit(levels(swedfile$Region)," ")
levels(swedfile$Region)<-sapply(columnsplit,function(x) x[[2]])
#Spreading the data from long to wide based on factors of Age
new_swedfile<-tidyr::spread(swedfile,Age,Mean_Income)
#colnames(new_swedfile)<-c("Region","Yo","Mean_Income")
#Violin Plot for three Age group showing mean income in SEK
p<-ggplot(swedfile,aes(Age,Mean_Income,color=Age)) + geom_violin()
p+stat_summary(fun.y=median,geom="point",color="blue") +xlab("\n Age Group ") +
ylab("Mean Income in SEK\n")
plot_ly() %>% add_sf(data=swedimage)
#Reading file
swedfile<-read.csv("Swedish_Household.csv",fileEncoding = "ISO-8859-1")
swedimage<-readRDS("Sweden_counties.rds")
#Renaming the levels of Age to more readable form and modifying the columns in table
levels(swedfile$age)<-c("Young","Adult","Senior")
colnames(swedfile)<-c("Region","Age","Mean_Income")
#Renaming the county to simpler form.
columnsplit<-strsplit(levels(swedfile$Region)," ")
levels(swedfile$Region)<-sapply(columnsplit,function(x) x[[2]])
#Spreading the data from long to wide based on factors of Age
new_swedfile<-tidyr::spread(swedfile,Age,Mean_Income)
#colnames(new_swedfile)<-c("Region","Yo","Mean_Income")
#Violin Plot for three Age group showing mean income in SEK
p<-ggplot(swedfile,aes(Age,Mean_Income,color=Age)) + geom_violin()
p+stat_summary(fun.y=median,geom="point",color="blue") +xlab("\n Age Group ") +
ylab("Mean Income in SEK\n")
plot_ly() %>% add_sf(data=swedimage)
install.packages("sf")
library(sf)
library(sf)
(.packages(all.available=TRUE))
install.packages("gdal")
install.packages("rgdal")
install.packages("rgdal", repos = "http://cran.us.r-project.org", type = "source")
library(devtools)
install.packages("devtools")
plot_ly() %>% add_sf(data=swedimage)
install_github("r-spatial/sf")
library(devtools)
install_github("r-spatial/sf")
add-apt-repository ppa:ubuntugis/ubuntugis-unstable
install.packages("sf")
install.packages("~/rgdal_1.3-4.tar.gz", repos = NULL, type = "source")
install.packages("shiny")
setwd("~/Documents/Lab4_Group13")
pricesnearn<-read.csv("prices-and-earnings.txt")
View(pricesnearn)
pricesnearn<-read.table("prices-and-earnings.txt")
pricesnearn<-read.table("prices-and-earnings.txt",sep=" ")
pricesnearn<-read.table("prices-and-earnings.txt",sep=" ")
View(pricesnearn)
pricesnearn<-read.table("prices-and-earnings.txt",fill=TRUE)
View(pricesnearn)
pricesnearn<-read.table("prices-and-earnings.txt",fill=TRUE,colClasses = rep(NA,c(1,2)))
pricesnearn<-read.table("prices-and-earnings.txt",fill=TRUE)
rownames(pricesnearn)<-pricesnearn[1,]
View(pricesnearn)
pricesnearn[1,]
names(pricesnearn[1,])
unnname'(pricesnearn[1,])
.
,
)
dsf
df
d
.
)
]
-
dfdf
............
pricesnearn<-read.table("prices-and-earnings.txt",fill=TRUE,header=TRUE)
View(pricesnearn)
View(pricesnearn)
View(pricesnearn)
dfd
